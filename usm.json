{"version":3,"sources":["unknown"],"names":[],"mappings":";AACA,IAAI,MAAM,OAAO,EAAjB;;AAEA,CAAC,YAAY;AACZ;;;;;;;;AAOA,KAAI,QAAQ,SAAS,UAAT,CAAoB,MAApB,CAA2B;;AAEtC,SAAO,IAAI,IAF2B;;;AAKtC,gBAAc,IAAI,SAAS,YAAb,CAA0B,6BAA1B,CALwB;;;AAQtC,aAAW,YAAY;AACtB,UAAO,KAAK,KAAL,CAAW,EAAC,WAAW,IAAZ,EAAX,CAAP;AACA,GAVqC;;;AAatC,aAAW,YAAY;AACtB,UAAO,KAAK,KAAL,CAAW,EAAC,WAAW,KAAZ,EAAX,CAAP;AACA,GAfqC;;;;AAmBtC,aAAW,YAAY;AACtB,8BAAO,KAAK,MAAZ,mBAAqB,KAAK,IAAL,GAAY,GAAZ,CAAgB,oBAAhB,CAArB,EAAgD,CAAhD,IAAoD,CAApD;AACA,GArBqC;;;AAwBtC,cAAY;AAxB0B,EAA3B,CAAZ;;;AA4BA,KAAI,KAAJ,GAAY,IAAI,KAAJ,EAAZ;AACA,CArCD","file":"unknown","sourcesContent":["/*global Backbone */\nvar app = app || {};\n\n(function () {\n\t'use strict';\n\n\t// Todo Collection\n\t// ---------------\n\n\t// The collection of todos is backed by *localStorage* instead of a remote\n\t// server.\n\tvar Todos = Backbone.Collection.extend({\n\t\t// Reference to this collection's model.\n\t\tmodel: app.Todo,\n\n\t\t// Save all of the todo items under this example's namespace.\n\t\tlocalStorage: new Backbone.LocalStorage('todos-backbone'),\n\n\t\t// Filter down the list of all todo items that are finished.\n\t\tcompleted: function () {\n\t\t\treturn this.where({completed: true});\n\t\t},\n\n\t\t// Filter down the list to only todo items that are still not finished.\n\t\tremaining: function () {\n\t\t\treturn this.where({completed: false});\n\t\t},\n\n\t\t// We keep the Todos in sequential order, despite being saved by unordered\n\t\t// GUID in the database. This generates the next order number for new items.\n\t\tnextOrder: function () {\n\t\t\treturn this.length ? this.last().get('order') + 1 : 1;\n\t\t},\n\n\t\t// Todos are sorted by their original insertion order.\n\t\tcomparator: 'order'\n\t});\n\n\t// Create our global collection of **Todos**.\n\tapp.todos = new Todos();\n})();\n"]}